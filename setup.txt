# Noom

Zoom Clone using NodeJS, WebRTC and Websockets.

환경 설정 방법
0. 프로젝트 생성
1. package.json에서 스크립트, 메인을 삭제
2. README.md파일 생성
3. npm install nodemon -D 터미널에서 설치
4. babel.config.json , nodemon.json src폴더 생성후 내부에 server.js파일을 생성
5. 터미널에서 git init .
6. 터미널에서 바벨을 설치한다.
(npm install babel/core @babel/cli @babel/node -D)
7. .gitignore을 만들어준다.(윈도)
    touch .gitignore(맥)
 다음 /node_modules를 추가해준다.
8. babel.config.json , nodemon.json 파일 내부 채우기
- nodemon.json
{
    "exec":"babel-node src/server.js"
}

- babel.config.json
{
    "presets":["@babel/preset-env"]
}
- @babel/preset-env 를 터미널에서 추가로 설치해준다.
9. package.json에 코드를 추가한다.
"scripts" : {
    "dev":"nodemon"
}

10. npm install express 터미널 설치
11. npm install pug 터미널 설치
12. npm run dev 으로 터미널에서 실행하면 동작한다.

-- git push -u origin main 명령어로 
작업이 완료되었다면 커밋을 실행시켜줘야한다.
그리고 동기화 까지 해주면 프로젝트 홈페이지에서 커밋된 내용을 확인 할 수 있다.

WS으로 웹소켓을 생성한다. : 사용하기 편하고 빠르며 클라이언트와 서버 사이에서의 웹소켓 실행에서 검증 된 
모듈이며 웹소켓의 핵심(core)이다.
설치 : npm i ws@7.5.3

집에서 사용하는 port번호는 3001
노트북으로 작업할때 사용하는 포트 번호는 3000이다. 
// 노트북 포트번호랑 집에서 사용하는 포트번호를 일치 시켰다.


socket.io은 프레임워크로 웹소켓을 보다 더 빠르게 만들어주는 기능을 가지고 있다.
- 웹소켓 관련 코드는 전부 주석 처리하였다.

npm i socket.io 명령어로 설치한다.(설치 시간은 짧다)

soket.io admin panel 접근 가능하다.
- 모든 소켓을 볼 수 있으며 채팅방과 클라이언트까지도 확인이 가능하다.
npm i '@socket.io/admin-ui'

local tunnel이라는 패키지로 모바일 환경에서도 실행이 가능하다.
서버를 전 세계와 공유를 할수 있게 해준다. 
npm i -g localtunnel

lt --port 3001을 커맨드에 입력하면 url이 랜덤하게 생성된다. 
나오는 주소를 입력하면 안내화면이 나오는데 continue를 클릭하면 앱으로 이동된다.

// stun서버로 화상채팅이 되지 않는 문제를 해결할 수 있다.
stun서버는 기기들이 공용 ip주소를 찾게 해주는 기능을 가지고 있다.